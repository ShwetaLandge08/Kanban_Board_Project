Index: KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.niit.kanban.KanbanService.service;\r\n\r\nimport com.niit.kanban.KanbanService.domain.Project;\r\nimport com.niit.kanban.KanbanService.domain.Stage;\r\nimport com.niit.kanban.KanbanService.domain.Task;\r\nimport com.niit.kanban.KanbanService.domain.User;\r\nimport com.niit.kanban.KanbanService.exception.UserAlreadyExistsException;\r\nimport com.niit.kanban.KanbanService.exception.UserNotFoundException;\r\nimport com.niit.kanban.KanbanService.proxy.EmailProxy;\r\nimport com.niit.kanban.KanbanService.proxy.IUserProxy;\r\nimport com.niit.kanban.KanbanService.repository.ProjectRepository;\r\nimport com.niit.kanban.KanbanService.repository.UserRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class UserServiceImpl implements UserService {\r\n    private final IUserProxy userProxy;\r\n    private final EmailProxy emailProxy;\r\n    private final UserRepository userRepository;\r\n    private final ProjectRepository projectRepository;\r\n\r\n    @Autowired\r\n    public UserServiceImpl(IUserProxy userProxy, EmailProxy emailProxy, UserRepository userRepository, ProjectRepository projectRepository) {\r\n        this.userProxy = userProxy;\r\n        this.emailProxy = emailProxy;\r\n        this.userRepository = userRepository;\r\n        this.projectRepository = projectRepository;\r\n    }\r\n\r\n    @Override\r\n    public User saveUser(User user) throws UserAlreadyExistsException {\r\n        if (userRepository.existsById(user.getEmail())) throw new UserAlreadyExistsException();\r\n        userProxy.saveUser(user);\r\n        emailProxy.sendRegistrationMail(user);\r\n        user.setPhoneNo(null);\r\n        user.setPassword(null);\r\n        //user.setName(null);\r\n        return userRepository.save(user);\r\n    }\r\n\r\n    @Override\r\n    public List<User> getAllUser() {\r\n        return userRepository.findAll();\r\n    }\r\n\r\n    @Override\r\n    public User getUser(String email) throws UserNotFoundException {\r\n        return userRepository.findById(email).orElseThrow(UserNotFoundException::new);\r\n    }\r\n\r\n    @Override\r\n    public User updateUser(String email, User user) throws UserNotFoundException {\r\n        User existingUser = userRepository.findById(email).orElseThrow(UserNotFoundException::new);\r\n\r\n        if (user.getName() != null && !user.getName().isEmpty())\r\n            existingUser.setName(user.getName());\r\n\r\n        if (user.getPhoneNo() != null)\r\n            existingUser.setPhoneNo(user.getPhoneNo());\r\n\r\n        if (user.getImage() != null)\r\n            existingUser.setImage(user.getImage());\r\n\r\n        userProxy.updateUser(existingUser);\r\n        emailProxy.sendUpdateMail(existingUser);\r\n        existingUser.setPhoneNo(null);\r\n        existingUser.setPassword(null);\r\n        existingUser.setImage(null);\r\n        return userRepository.save(existingUser);\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteUser(String email) throws UserNotFoundException {\r\n        User user = userRepository.findById(email).orElseThrow(UserNotFoundException::new);\r\n        List<Project> allProject = projectRepository.findAll();\r\n        for (Project project : allProject) {\r\n            if (project.getAdmin().getEmail().equals(email)) {\r\n                projectRepository.delete(project);\r\n            } else {\r\n                List<User> members = project.getMembers();\r\n                members.removeIf(member -> member.getEmail().equals(email));\r\n\r\n                List<Stage> allStages = project.getStages();\r\n                for (Stage stage : allStages) {\r\n                    List<Task> tasks = stage.getTasks();\r\n//                    //we should not remove task, but we have to change assignee to null for that task. this can\r\n//                    //be only done after adding functionality for update task Assignee.\r\n//                    tasks.removeIf(task -> task.getAssignee().getEmail().equals(email));\r\n                    for(Task task : tasks){\r\n                        if(task.getAssignee().getEmail().equals(email))\r\n                            task.setAssignee(null);\r\n                    }\r\n                }\r\n                projectRepository.save(project);\r\n            }\r\n        }\r\n        userProxy.deleteUser(email);\r\n        userRepository.delete(user);\r\n        return true;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java b/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java
--- a/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java	(date 1709110593982)
@@ -10,6 +10,7 @@
 import com.niit.kanban.KanbanService.proxy.IUserProxy;
 import com.niit.kanban.KanbanService.repository.ProjectRepository;
 import com.niit.kanban.KanbanService.repository.UserRepository;
+import io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
@@ -21,13 +22,15 @@
     private final EmailProxy emailProxy;
     private final UserRepository userRepository;
     private final ProjectRepository projectRepository;
+    private final CircuitBreakerRegistry circuitBreakerRegistry;
 
     @Autowired
-    public UserServiceImpl(IUserProxy userProxy, EmailProxy emailProxy, UserRepository userRepository, ProjectRepository projectRepository) {
+    public UserServiceImpl(IUserProxy userProxy, EmailProxy emailProxy, UserRepository userRepository, ProjectRepository projectRepository, CircuitBreakerRegistry circuitBreakerRegistry) {
         this.userProxy = userProxy;
         this.emailProxy = emailProxy;
         this.userRepository = userRepository;
         this.projectRepository = projectRepository;
+        this.circuitBreakerRegistry = circuitBreakerRegistry;
     }
 
     @Override
@@ -89,8 +92,8 @@
 //                    //we should not remove task, but we have to change assignee to null for that task. this can
 //                    //be only done after adding functionality for update task Assignee.
 //                    tasks.removeIf(task -> task.getAssignee().getEmail().equals(email));
-                    for(Task task : tasks){
-                        if(task.getAssignee().getEmail().equals(email))
+                    for (Task task : tasks) {
+                        if (task.getAssignee().getEmail().equals(email))
                             task.setAssignee(null);
                     }
                 }
@@ -102,4 +105,7 @@
         return true;
     }
 
+    public String circuitBreakerState() {
+        return circuitBreakerRegistry.circuitBreaker("circuitBreaker").getState().name();
+    }
 }
Index: KanbanService/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <parent>\r\n        <groupId>org.kanban.board</groupId>\r\n        <artifactId>Kanban_Board_Major_Project</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </parent>\r\n\r\n    <groupId>com.niit.kanban</groupId>\r\n    <artifactId>KanbanService</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>KanbanService</name>\r\n    <description>Kanban Service</description>\r\n    <properties>\r\n        <java.version>11</java.version>\r\n        <spring-cloud.version>2022.0.2</spring-cloud.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-openfeign</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-amqp</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.googlecode.json-simple</groupId>\r\n            <artifactId>json-simple</artifactId>\r\n            <version>1.1.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-api</artifactId>\r\n            <version>0.11.5</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-impl</artifactId>\r\n            <version>0.11.5</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-jackson</artifactId>\r\n            <version>0.11.5</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.github.resilience4j</groupId>\r\n            <artifactId>resilience4j-spring-boot2</artifactId>\r\n            <version>1.7.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-actuator</artifactId>\r\n            <version>2.4.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-aop</artifactId>\r\n            <version>2.4.1</version>\r\n        </dependency>\r\n    </dependencies>\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>org.springframework.cloud</groupId>\r\n                <artifactId>spring-cloud-dependencies</artifactId>\r\n                <version>${spring-cloud.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <configuration>\r\n                    <excludes>\r\n                        <exclude>\r\n                            <groupId>org.projectlombok</groupId>\r\n                            <artifactId>lombok</artifactId>\r\n                        </exclude>\r\n                    </excludes>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n    <repositories>\r\n        <repository>\r\n            <id>spring-snapshots</id>\r\n            <name>Spring Snapshots</name>\r\n            <url>https://repo.spring.io/snapshot</url>\r\n            <releases>\r\n                <enabled>false</enabled>\r\n            </releases>\r\n        </repository>\r\n    </repositories>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KanbanService/pom.xml b/KanbanService/pom.xml
--- a/KanbanService/pom.xml	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/KanbanService/pom.xml	(date 1709023454814)
@@ -60,16 +60,30 @@
             <groupId>org.springframework.cloud</groupId>
             <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
         </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
         <dependency>
-            <groupId>io.github.resilience4j</groupId>
-            <artifactId>resilience4j-spring-boot2</artifactId>
-            <version>1.7.0</version>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+            <version>3.2.1</version>
         </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-circuitbreaker-resilience4j -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
+            <version>3.1.0</version>
+        </dependency>
+
+
+        <!--        to find the health of microservice-->
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-actuator</artifactId>
             <version>2.4.1</version>
         </dependency>
+
+<!--        sending metric to actuator-->
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-aop</artifactId>
Index: KanbanService/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>resilience4j.circuitbreaker:\r\n  instances:\r\n    registerAPI:\r\n      registerHealthIndicator: true\r\n      slidingWindowSize: 60\r\n      slidingWindowType: TIME_BASED\r\n      permittedNumberOfCallsInHalfOpenState: 3\r\n      minimumNumberOfCalls: 10\r\n      waitDurationInOpenState: 5s\r\n      slowCallRateThreshold: 100\r\n      slowCallDurationThreshold: 2000\r\n      failureRateThreshold: 50\r\n      eventConsumerBufferSize: 10\r\n      ignoreExceptions:\r\n        - com.jsession4d.feignclient.BusinessException\r\n    updateAPI:\r\n      registerHealthIndicator: true\r\n      slidingWindowSize: 60\r\n      slidingWindowType: TIME_BASED\r\n      permittedNumberOfCallsInHalfOpenState: 3\r\n      minimumNumberOfCalls: 10\r\n      waitDurationInOpenState: 5s\r\n      slowCallRateThreshold: 100\r\n      slowCallDurationThreshold: 2000\r\n      failureRateThreshold: 50\r\n      eventConsumerBufferSize: 10\r\n      ignoreExceptions:\r\n        - com.jsession4d.feignclient.BusinessException\r\n    deleteAPI:\r\n      registerHealthIndicator: true\r\n      slidingWindowSize: 60\r\n      slidingWindowType: TIME_BASED\r\n      permittedNumberOfCallsInHalfOpenState: 3\r\n      minimumNumberOfCalls: 10\r\n      waitDurationInOpenState: 5s\r\n      slowCallRateThreshold: 100\r\n      slowCallDurationThreshold: 2000\r\n      failureRateThreshold: 50\r\n      eventConsumerBufferSize: 10\r\n      ignoreExceptions:\r\n        - com.jsession4d.feignclient.BusinessException\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: always         #To show all details in /health endpoint.\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n\r\nmanagement.health.circuitbreakers.enabled: true #To show Circuit Breaker status\r\nresilience4j.ratelimiter:\r\n  instances:\r\n    my5TPSRateLimiter:\r\n      limitRefreshPeriod: 1s\r\n      limitForPeriod: 5\r\n      timeoutDuration: 3s\r\n      registerHealthIndicator: true    #To register ratelimiter details to /actuator/health endpoint.\r\n      eventConsumerBufferSize: 100     #Buffer size to store the ratelimiter events - viewable via /actuator/ratelimiterevents
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KanbanService/src/main/resources/application.yml b/KanbanService/src/main/resources/application.yml
--- a/KanbanService/src/main/resources/application.yml	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/KanbanService/src/main/resources/application.yml	(date 1709031050123)
@@ -1,58 +1,43 @@
-resilience4j.circuitbreaker:
-  instances:
-    registerAPI:
-      registerHealthIndicator: true
-      slidingWindowSize: 60
-      slidingWindowType: TIME_BASED
-      permittedNumberOfCallsInHalfOpenState: 3
-      minimumNumberOfCalls: 10
-      waitDurationInOpenState: 5s
-      slowCallRateThreshold: 100
-      slowCallDurationThreshold: 2000
-      failureRateThreshold: 50
-      eventConsumerBufferSize: 10
-      ignoreExceptions:
-        - com.jsession4d.feignclient.BusinessException
-    updateAPI:
-      registerHealthIndicator: true
-      slidingWindowSize: 60
-      slidingWindowType: TIME_BASED
-      permittedNumberOfCallsInHalfOpenState: 3
-      minimumNumberOfCalls: 10
-      waitDurationInOpenState: 5s
-      slowCallRateThreshold: 100
-      slowCallDurationThreshold: 2000
-      failureRateThreshold: 50
-      eventConsumerBufferSize: 10
-      ignoreExceptions:
-        - com.jsession4d.feignclient.BusinessException
-    deleteAPI:
-      registerHealthIndicator: true
-      slidingWindowSize: 60
-      slidingWindowType: TIME_BASED
-      permittedNumberOfCallsInHalfOpenState: 3
-      minimumNumberOfCalls: 10
-      waitDurationInOpenState: 5s
-      slowCallRateThreshold: 100
-      slowCallDurationThreshold: 2000
-      failureRateThreshold: 50
-      eventConsumerBufferSize: 10
-      ignoreExceptions:
-        - com.jsession4d.feignclient.BusinessException
+resilience4j:
+
+  circuitbreaker:
+
+    instances:
+
+      service_User:
+
+        registerHealthIndicator: true
+
+        eventConsumerBufferSize: 10
+
+        failureRateThreshold: 50
+
+        minimumNumberOfCalls: 5
+
+        automaticTransitionFromOpenToHalfOpenEnabled: true
+
+        waitDurationInOpenState: 5s
+
+        permittedNumberOfCallsInHalfOpenState: 3
+
+        slidingWindowSize: 10
+
+        slidingWindowType: COUNT_BASED
 management:
+  security:
+    enabled:false
+  health:
+    circuitbreakers:
+      enabled: true
   endpoint:
     health:
-      show-details: always         #To show all details in /health endpoint.
+      show-details: "ALWAYS"
+  endpoints:
     web:
       exposure:
         include: "*"
 
-management.health.circuitbreakers.enabled: true #To show Circuit Breaker status
-resilience4j.ratelimiter:
-  instances:
-    my5TPSRateLimiter:
-      limitRefreshPeriod: 1s
-      limitForPeriod: 5
-      timeoutDuration: 3s
-      registerHealthIndicator: true    #To register ratelimiter details to /actuator/health endpoint.
-      eventConsumerBufferSize: 100     #Buffer size to store the ratelimiter events - viewable via /actuator/ratelimiterevents
\ No newline at end of file
+resilience4j.circuitbreaker:
+  configs:
+    default:
+      registerHealthIndicator: true
\ No newline at end of file
Index: KanbanService/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8081\r\nspring.data.mongodb.database=kanban_board_final\r\n#spring.data.mongodb.uri = mongodb://mongodbservice:27017\r\nspring.data.mongodb.uri=mongodb://localhost:27017\r\nserver.error.include-message=always\r\nlogging.level.org.mongodb=warn\r\nspring.application.name=kanban-board-service\r\neureka.client.fetch-registry=true\r\neureka.client.register-with-eureka=true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/KanbanService/src/main/resources/application.properties b/KanbanService/src/main/resources/application.properties
--- a/KanbanService/src/main/resources/application.properties	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/KanbanService/src/main/resources/application.properties	(date 1709108071421)
@@ -6,4 +6,8 @@
 logging.level.org.mongodb=warn
 spring.application.name=kanban-board-service
 eureka.client.fetch-registry=true
-eureka.client.register-with-eureka=true
\ No newline at end of file
+eureka.client.register-with-eureka=true
+
+#feign.circuitbreaker.enabled=true
+resilience4j.circuitbreaker.instances.default.config.failureRateThreshold=50
+resilience4j.circuitbreaker.instances.default.config.slidingWindowSize=5
\ No newline at end of file
Index: KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.niit.kanban.KanbanService.controller;\r\n\r\nimport com.niit.kanban.KanbanService.domain.User;\r\nimport com.niit.kanban.KanbanService.exception.UserAlreadyExistsException;\r\nimport com.niit.kanban.KanbanService.exception.UserNotFoundException;\r\nimport com.niit.kanban.KanbanService.service.UserService;\r\nimport io.jsonwebtoken.Claims;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/kanban/user\")\r\npublic class UserController {\r\n    private final UserService userService;\r\n\r\n    @Autowired\r\n    public UserController(UserService userService) {\r\n        this.userService = userService;\r\n    }\r\n\r\n    @PostMapping(\"/register\")\r\n    public ResponseEntity<?> saveUser(@RequestBody User user) {\r\n        try {\r\n            return new ResponseEntity<>(userService.saveUser(user), HttpStatus.CREATED);\r\n        } catch (UserAlreadyExistsException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @GetMapping(\"/all\")\r\n    public ResponseEntity<?> getAllUser() {\r\n        return new ResponseEntity<>(userService.getAllUser(), HttpStatus.OK);\r\n    }\r\n\r\n    @PutMapping(\"/update\")\r\n    public ResponseEntity<?> updateUser(HttpServletRequest servletRequest, @RequestBody User user) {\r\n        Claims claims = (Claims) servletRequest.getAttribute(\"claims\");\r\n        String email = claims.getSubject();\r\n        try {\r\n            return new ResponseEntity<>(userService.updateUser(email, user), HttpStatus.OK);\r\n        } catch (UserNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @DeleteMapping(\"/delete/{email}\")\r\n    public ResponseEntity<?> deleteUser(@PathVariable String email) {\r\n        try {\r\n            return new ResponseEntity<>(userService.deleteUser(email), HttpStatus.OK);\r\n        } catch (UserNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/UserController.java b/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/UserController.java
--- a/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/UserController.java	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/UserController.java	(date 1709109518957)
@@ -4,6 +4,7 @@
 import com.niit.kanban.KanbanService.exception.UserAlreadyExistsException;
 import com.niit.kanban.KanbanService.exception.UserNotFoundException;
 import com.niit.kanban.KanbanService.service.UserService;
+import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;
 import io.jsonwebtoken.Claims;
 import jakarta.servlet.http.HttpServletRequest;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -11,17 +12,21 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 
+import java.util.Date;
+
 @RestController
 @RequestMapping("/api/kanban/user")
 public class UserController {
     private final UserService userService;
 
+
     @Autowired
     public UserController(UserService userService) {
         this.userService = userService;
     }
 
     @PostMapping("/register")
+    @CircuitBreaker(name = "service_User", fallbackMethod = "fallbackMethodForUserService")
     public ResponseEntity<?> saveUser(@RequestBody User user) {
         try {
             return new ResponseEntity<>(userService.saveUser(user), HttpStatus.CREATED);
@@ -35,6 +40,7 @@
         return new ResponseEntity<>(userService.getAllUser(), HttpStatus.OK);
     }
 
+    @CircuitBreaker(name = "service_User", fallbackMethod = "fallbackMethodForUserService")
     @PutMapping("/update")
     public ResponseEntity<?> updateUser(HttpServletRequest servletRequest, @RequestBody User user) {
         Claims claims = (Claims) servletRequest.getAttribute("claims");
@@ -46,6 +52,7 @@
         }
     }
 
+    @CircuitBreaker(name = "service_User", fallbackMethod = "fallbackMethodForUserService")
     @DeleteMapping("/delete/{email}")
     public ResponseEntity<?> deleteUser(@PathVariable String email) {
         try {
@@ -54,4 +61,10 @@
             throw new RuntimeException(e);
         }
     }
+
+    public ResponseEntity<?> fallbackMethodForUserService(Exception e) {
+        System.out.println("User Service is Down");
+        String message = "Circuit Breaker is Enabled. The User Service is Down. We will be back. " + new Date();
+        return new ResponseEntity<>(message, HttpStatus.SERVICE_UNAVAILABLE);
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5398faf9-45ee-4b80-a2f6-410a69192503\" name=\"Changes\" comment=\"Merge remote-tracking branch 'github/master'&#10;&#10;# Conflicts:&#10;#&#9;Backend/Kanban_Board_Major_Project/.idea/workspace.xml\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/TaskController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/TaskController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskServiceImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/_services/kanban.service.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/_services/kanban.service.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-add-project/dialog-add-project.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-add-project/dialog-add-project.component.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/task-details/task-details.component.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/task-details/task-details.component.ts\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/../..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2Rud2PhsrEk7g8d1Qcrjx5L8CDa\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"foldersAlwaysOnTop\" value=\"false\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;full.screen.before.presentation.mode&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/shwlandge/OneDrive - Deloitte (O365D)/Documents/GitHub/Kanban_Board_Project/Backend/Kanban_Board_Major_Project&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.scopes&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Backup10_09\\Users\\shweta y. landge\\NIIT\\CapstoneProjectKanbanBoardFinal\\capstone_kanban_board_project\\Backend\\Kanban_Board_Major_Project\\KanbanService\\src\\main\\java\\com\\niit\\kanban\\KanbanService\\exception\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.UserAuthenticationApplication\">\r\n    <configuration name=\"ApiGatewayServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.kanban.APIGatewayService.ApiGatewayServiceApplication\" />\r\n      <module name=\"APIGatewayService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.kanban.APIGatewayService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"EurekaServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.kanban.EurekaService.EurekaServiceApplication\" />\r\n      <module name=\"EurekaService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.kanban.EurekaService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"KanbanServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.kanban.KanbanService.KanbanServiceApplication\" />\r\n      <module name=\"KanbanService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.kanban.KanbanService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NotificationServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.kanban.NotificationService.NotificationServiceApplication\" />\r\n      <module name=\"NotificationService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.kanban.NotificationService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserAuthenticationApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.kanban.UserAuthentication.UserAuthenticationApplication\" />\r\n      <module name=\"UserAuthentication\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.kanban.UserAuthentication.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.KanbanServiceApplication\" />\r\n        <item itemvalue=\"Application.UserAuthenticationApplication\" />\r\n        <item itemvalue=\"Application.NotificationServiceApplication\" />\r\n        <item itemvalue=\"Application.ApiGatewayServiceApplication\" />\r\n        <item itemvalue=\"Application.EurekaServiceApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5398faf9-45ee-4b80-a2f6-410a69192503\" name=\"Changes\" comment=\"\" />\r\n      <created>1688103694945</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1688103694945</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Merge remote-tracking branch 'github/master'&#10;&#10;# Conflicts:&#10;#&#9;Backend/Kanban_Board_Major_Project/.idea/workspace.xml\">\r\n      <created>1690189003998</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1690189003998</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Changes in dashboard\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'github/master'&#10;&#10;# Conflicts:&#10;#&#9;Backend/Kanban_Board_Major_Project/.idea/workspace.xml\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Merge remote-tracking branch 'github/master'&#10;&#10;# Conflicts:&#10;#&#9;Backend/Kanban_Board_Major_Project/.idea/workspace.xml\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/.idea/workspace.xml	(date 1709109583835)
@@ -5,14 +5,16 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="5398faf9-45ee-4b80-a2f6-410a69192503" name="Changes" comment="Merge remote-tracking branch 'github/master'&#10;&#10;# Conflicts:&#10;#&#9;Backend/Kanban_Board_Major_Project/.idea/workspace.xml">
+      <change afterPath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/HealthController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/TaskController.java" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/TaskController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskService.java" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/TaskServiceImpl.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/KanbanService/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/UserController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/src/main/java/com/niit/kanban/KanbanService/service/UserServiceImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/_services/kanban.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/_services/kanban.service.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-add-project/dialog-add-project.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-add-project/dialog-add-project.component.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/task-details/task-details.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/task-details/task-details.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/KanbanService/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/KanbanService/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/KanbanService/src/main/resources/application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-confirm-delete/dialog-confirm-delete.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-confirm-delete/dialog-confirm-delete.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/sign-up/sign-up.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/sign-up/sign-up.component.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/update-user/update-user.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../../Frontend/Kanban_Board_Major_Project/src/app/update-user/update-user.component.ts" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -30,6 +32,20 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
   </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;ShwetaLandge08&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="5057de4e-2a6d-4d22-a502-6a086286ff12" />
+        <option name="url" value="https://github.com/ShwetaLandge08/Kanban_Board_Project.git" />
+      </UrlAndAccount>
+    </option>
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -64,7 +80,7 @@
       <recent name="D:\Backup10_09\Users\shweta y. landge\NIIT\CapstoneProjectKanbanBoardFinal\capstone_kanban_board_project\Backend\Kanban_Board_Major_Project\KanbanService\src\main\java\com\niit\kanban\KanbanService\exception" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.UserAuthenticationApplication">
+  <component name="RunManager" selected="Application.KanbanServiceApplication">
     <configuration name="ApiGatewayServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.niit.kanban.APIGatewayService.ApiGatewayServiceApplication" />
       <module name="APIGatewayService" />
@@ -133,10 +149,10 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.KanbanServiceApplication" />
-        <item itemvalue="Application.UserAuthenticationApplication" />
         <item itemvalue="Application.NotificationServiceApplication" />
         <item itemvalue="Application.ApiGatewayServiceApplication" />
         <item itemvalue="Application.EurekaServiceApplication" />
+        <item itemvalue="Application.UserAuthenticationApplication" />
       </list>
     </recent_temporary>
   </component>
Index: KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/HealthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/HealthController.java b/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/HealthController.java
new file mode 100644
--- /dev/null	(date 1709109604813)
+++ b/KanbanService/src/main/java/com/niit/kanban/KanbanService/controller/HealthController.java	(date 1709109604813)
@@ -0,0 +1,25 @@
+package com.niit.kanban.KanbanService.controller;
+
+import com.niit.kanban.KanbanService.service.UserServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+@RequestMapping("/api/kanban")
+public class HealthController {
+    @Autowired
+    private UserServiceImpl service;
+
+    @GetMapping("/health")
+    public String health() {
+        System.out.println("Service is healthy");
+        return "Service is healthy";
+    }
+
+    @GetMapping("/circuitbreaker")
+    public String circuitBreakerState() {
+        return "Circuit Breaker State: " + service.circuitBreakerState();
+    }
+}
Index: ../../Frontend/Kanban_Board_Major_Project/src/app/sign-up/sign-up.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  imgsrc = 'https://c.staticblitz.com/assets/client/components/SideMenu/blitz_logo-11cebad97cad4b50bc955cf72f532d1b.png';\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar,\r\n    private authService: AuthService, private router: Router,\r\n    private tokenStorage: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.isLoggedIn()) {\r\n      this.router.navigate(['/dashboard']);\r\n    }\r\n  }\r\n\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  registrationForm = this.fb.group({\r\n    name: ['', [Validators.required, Validators.minLength(3)]],\r\n    email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z][a-zA-Z\\d\\w.]{2,}@[a-zA-Z\\d]{3,}\\.[a-zA-Z]{2,}$/)]],\r\n    password: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/)]],\r\n    confirmPassword: ['', [Validators.required]],\r\n    phoneNo: ['', [Validators.required, Validators.pattern(/^[789]\\d{9,9}$/)]],\r\n    photo: []\r\n  }, { validators: this.mustMatchValidator });\r\n\r\n  get name() {\r\n    return this.registrationForm.get(\"name\");\r\n  }\r\n  get email() {\r\n    return this.registrationForm.get(\"email\");\r\n  }\r\n  get password() {\r\n    return this.registrationForm.get(\"password\");\r\n  }\r\n  get confirmPassword() {\r\n    return this.registrationForm.get(\"confirmPassword\");\r\n  }\r\n  get phoneNo() {\r\n    return this.registrationForm.get(\"phoneNo\");\r\n  }\r\n  get photo() {\r\n    return this.registrationForm.get(\"photo\");\r\n  }\r\n\r\n  mustMatchValidator(fg: AbstractControl): { [key: string]: boolean } | null {\r\n    const passwordValue = fg.get(\"password\")?.value;\r\n    const confirmPasswordValue = fg.get(\"confirmPassword\")?.value;\r\n    if (passwordValue !== confirmPasswordValue) {\r\n      console.log(\"mustMatch true\");\r\n      fg.get('confirmPassword')?.setErrors({ mustMatch: true });\r\n      return { mustMatch: true }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onSubmit(registrationForm: FormGroup): void {\r\n    if (registrationForm.valid) {\r\n      const user: User = registrationForm.value;\r\n\r\n      this.authService.register(user).subscribe({\r\n        next: data => {\r\n          console.log(data);\r\n          this.isSuccessful = true;\r\n          this.isSignUpFailed = false;\r\n          this.router.navigate(['/login']);\r\n          this.snackBar.open(\"Congrats!!! You are registered with us.\", \"success\", {\r\n            duration: 1000,\r\n            panelClass: ['mat-toolbar', 'mat-primary']\r\n          });\r\n          this.resetForm();\r\n        },\r\n        error: err => {\r\n          this.errorMessage = err.error.message;\r\n          this.isSignUpFailed = true;\r\n          this.snackBar.open(err.errorMessage, \"\\nFailed\", {\r\n            panelClass: ['mat-toolbar', 'mat-primary']\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.registrationForm.reset();\r\n    Object.keys(this.registrationForm.controls).forEach(key => {\r\n      this.registrationForm.get(key)?.setErrors(null);\r\n    });\r\n  }\r\n  // selectedFile: File | undefined;\r\n  // onFileSelected(event: any) {\r\n  //   this.selectedFile = event.target.files[0];\r\n  // }\r\n\r\n  // onUpload() {\r\n  //   const formData = new FormData();\r\n  //   formData.append('profilePicture', this.selectedFile!, this.selectedFile?.name!);\r\n  //   console.log(this.selectedFile);\r\n  // }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Frontend/Kanban_Board_Major_Project/src/app/sign-up/sign-up.component.ts b/../../Frontend/Kanban_Board_Major_Project/src/app/sign-up/sign-up.component.ts
--- a/../../Frontend/Kanban_Board_Major_Project/src/app/sign-up/sign-up.component.ts	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/../../Frontend/Kanban_Board_Major_Project/src/app/sign-up/sign-up.component.ts	(date 1709029388176)
@@ -85,7 +85,8 @@
         error: err => {
           this.errorMessage = err.error.message;
           this.isSignUpFailed = true;
-          this.snackBar.open(err.errorMessage, "\nFailed", {
+          console.log(err.error);
+          this.snackBar.open(err.error, "\nFailed", {
             panelClass: ['mat-toolbar', 'mat-primary']
           });
         }
@@ -107,6 +108,4 @@
   // onUpload() {
   //   const formData = new FormData();
   //   formData.append('profilePicture', this.selectedFile!, this.selectedFile?.name!);
-  //   console.log(this.selectedFile);
-  // }
-}
\ No newline at end of file
+  //   console.log(th
\ No newline at end of file
Index: ../../Frontend/Kanban_Board_Major_Project/src/app/update-user/update-user.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataStorageService } from '../_services/data-storage.service';\r\nimport ImageCompressor from 'image-compressor.js';\r\nimport { Ng2ImgMaxService } from 'ng2-img-max';\r\n\r\nconst compressor = new ImageCompressor();\r\n\r\n@Component({\r\n  selector: 'app-update-user',\r\n  templateUrl: './update-user.component.html',\r\n  styleUrls: ['./update-user.component.css']\r\n})\r\nexport class UpdateUserComponent {\r\n\r\n  //selectedImage: any;\r\n\r\n  constructor(private tokenStorage: TokenStorageService, private authService: AuthService,\r\n    private router: Router, private fb: FormBuilder, private snackBar: MatSnackBar,\r\n    private dataService: DataStorageService, private ng2ImgMaxService: Ng2ImgMaxService) { }\r\n\r\n  user = this.tokenStorage.getUser();\r\n\r\n  updateForm = this.fb.group({\r\n    email: [],\r\n    name: [this.user.name, Validators.required],\r\n    phoneNo: [this.user.phoneNo, [Validators.pattern(/^[789]\\d{9,9}$/)]],\r\n    image: ['']\r\n  });\r\n\r\n  get name() {\r\n    return this.updateForm.get(\"name\");\r\n  }\r\n  get email() {\r\n    return this.updateForm.get(\"email\");\r\n  }\r\n  get phoneNo() {\r\n    return this.updateForm.get(\"phoneNo\");\r\n  }\r\n  // get image() {\r\n  //   return this.updateForm.get(\"image\");\r\n  // }\r\n\r\n\r\n  updateUser(updateForm: FormGroup) {\r\n    if (updateForm.valid) {\r\n      if (!this.isDefaultImage())\r\n        updateForm.value.image = this.user.image;\r\n      console.log(updateForm.value);\r\n\r\n      this.authService.updateUser(updateForm.value).subscribe({\r\n        next: data => {\r\n          console.log(data);\r\n          console.log(this.user.id);\r\n\r\n          this.authService.getProfile(this.user.email).subscribe({\r\n            next: response => {\r\n              this.tokenStorage.saveUser(response);\r\n              console.log(response);\r\n              this.dataService.isLoggedIn.next(true);\r\n            }\r\n          });\r\n\r\n          this.snackBar.open(\"User details updated\", \"Updated\", {\r\n            duration: 5000\r\n          });\r\n          this.router.navigate(['/dashboard']);\r\n        },\r\n        error: err => {\r\n          console.log(err);\r\n          this.snackBar.open(err.error.message, \"Failed\", {\r\n            duration: 7000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  isDefaultImage(): boolean {\r\n    return this.user['image'] === \"https://www.citypng.com/public/uploads/preview/download-profile-user-round-purple-icon-symbol-png-11639594314uv1zwqsazt.png\";\r\n  }\r\n\r\n  onFileChanged(event: any) {\r\n    const file: File = event.target.files[0];\r\n    if (file) {\r\n      this.ng2ImgMaxService.compressImage(file, 0.8).subscribe({\r\n        next: data => {\r\n          const reader = new FileReader();\r\n          reader.onload = (event: any) => {\r\n            this.user.image = event.target.result.split(\",\")[1];\r\n          };\r\n          reader.readAsDataURL(data);\r\n        },\r\n        error: err => {\r\n          console.log(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Frontend/Kanban_Board_Major_Project/src/app/update-user/update-user.component.ts b/../../Frontend/Kanban_Board_Major_Project/src/app/update-user/update-user.component.ts
--- a/../../Frontend/Kanban_Board_Major_Project/src/app/update-user/update-user.component.ts	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/../../Frontend/Kanban_Board_Major_Project/src/app/update-user/update-user.component.ts	(date 1709030512073)
@@ -71,8 +71,8 @@
           this.router.navigate(['/dashboard']);
         },
         error: err => {
-          console.log(err);
-          this.snackBar.open(err.error.message, "Failed", {
+          console.log(err.error);
+          this.snackBar.open(err.error, "Failed", {
             duration: 7000
           });
         }
Index: ../../Frontend/Kanban_Board_Major_Project/src/app/dialog-confirm-delete/dialog-confirm-delete.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, Inject } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { KanbanService } from '../_services/kanban.service';\r\nimport { DataStorageService } from '../_services/data-storage.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog-confirm-delete',\r\n  templateUrl: './dialog-confirm-delete.component.html',\r\n  styleUrls: ['./dialog-confirm-delete.component.css']\r\n})\r\nexport class DialogConfirmDeleteComponent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) private data: any, private snackBar: MatSnackBar,\r\n    private kanbanService: KanbanService, private dataSharingService: DataStorageService, private auth: AuthService,\r\n    private router: Router, private tokenStorage: TokenStorageService\r\n  ) { }\r\n\r\n  key: string = Object.keys(this.data)[0];\r\n  value: any = Object.values(this.data)[0];\r\n\r\n  onClickYes(): void {\r\n    switch (this.key) {\r\n\r\n      case \"project\":\r\n        console.log(\"CASE: project\");\r\n        this.kanbanService.deleteProject(this.value).subscribe({\r\n          next: data => {\r\n            console.log(data);\r\n            this.snackBar.open(\"Project Deleted\", \"Deleted\", {\r\n              duration: 1000\r\n            });\r\n          },\r\n          error: err => {\r\n            console.log(err);\r\n            this.snackBar.open(err.error.message, \"Failed\", {\r\n              duration: 1000\r\n            });\r\n          }\r\n        });\r\n\r\n        break;\r\n\r\n      case \"task\":\r\n        console.log(\"CASE: task\");\r\n        this.kanbanService.deleteTask(this.value).subscribe({\r\n          next: data => {\r\n            console.log(data);\r\n            this.dataSharingService.isUpdate.next(data);\r\n            this.snackBar.open(\"Task Deleted\", \"Deleted\", {\r\n              duration: 1000\r\n            });\r\n          },\r\n          error: err => {\r\n            console.log(err);\r\n            this.snackBar.open(err.error.message, \"Failed\", {\r\n              duration: 1000\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case \"stage\":\r\n        console.log(\"CASE: stage\");\r\n        this.kanbanService.deleteStage(this.value).subscribe({\r\n          next: data => {\r\n            console.log(data);\r\n            this.dataSharingService.isUpdate.next(data);\r\n            this.snackBar.open(\"Stage Deleted\", \"Deleted\", {\r\n              duration: 1000\r\n            });\r\n          },\r\n          error: err => {\r\n            console.log(err);\r\n            this.snackBar.open(err.error.message, \"Failed\", {\r\n              duration: 1000\r\n            });\r\n          }\r\n        });\r\n        break;\r\n\r\n      case \"user\":\r\n        console.log(\"CASE: user\");\r\n        this.auth.deleteUser(this.value).subscribe(\r\n          (data) => {\r\n            console.log(data);\r\n            this.snackBar.open(\"User Deleted Successfully.\", \"success\", {\r\n              duration: 1000,\r\n              panelClass: ['mat-toolbar', 'mat-primary']\r\n            });\r\n            this.tokenStorage.signOut();\r\n            this.dataSharingService.isLoggedIn.next(false);\r\n            this.router.navigateByUrl(\"/register\");\r\n          },\r\n          (error) => {\r\n\r\n            this.snackBar.open(error.errorMessage, \"\\nFailed\", {\r\n              panelClass: ['mat-toolbar', 'mat-primary']\r\n            });\r\n          }\r\n        );\r\n        break;\r\n\r\n      default:\r\n        this.snackBar.open(\"Check object transfered to DialogConfirmDeleteComponent\", \"Error\", {\r\n          duration: 1000\r\n        });\r\n        break;\r\n    }\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-confirm-delete/dialog-confirm-delete.component.ts b/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-confirm-delete/dialog-confirm-delete.component.ts
--- a/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-confirm-delete/dialog-confirm-delete.component.ts	(revision c6c439b619b8fce43d3888c285eec280b5f8f7fd)
+++ b/../../Frontend/Kanban_Board_Major_Project/src/app/dialog-confirm-delete/dialog-confirm-delete.component.ts	(date 1709030375607)
@@ -95,8 +95,8 @@
             this.router.navigateByUrl("/register");
           },
           (error) => {
-
-            this.snackBar.open(error.errorMessage, "\nFailed", {
+            console.log(error.error);
+            this.snackBar.open(error.error, "\nFailed", {
               panelClass: ['mat-toolbar', 'mat-primary']
             });
           }
